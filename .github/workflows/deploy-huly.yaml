name: Deploy Huly to GKE

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      GCP_PROJECT_ID: self-hosted-projects-444508
      GKE_CLUSTER_NAME: huly-cluster
      GCP_ZONE: us-central1
      NAMESPACE: huly

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Authenticate to Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      # Step 3: Set up gcloud CLI
      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          project_id: ${{ env.GCP_PROJECT_ID }}

      # Step 4: Install gke-gcloud-auth-plugin
      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      # Step 5: Authenticate with GKE
      - name: Authenticate with GKE
        run: |
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER_NAME }} \
            --zone ${{ env.GCP_ZONE }}

      # Step 6: Create Namespace (if necessary)
      - name: Create Namespace
        run: |
          kubectl create namespace ${{ env.NAMESPACE }} || true

      # Step 7: Apply Configurations (ConfigMaps and Secrets)
      - name: Apply Configurations
        run: |
          kubectl apply -f config/ -n ${{ env.NAMESPACE }}

      # Step 8: Apply Persistent Volume Claims
      - name: Apply Persistent Volume Claims
        run: |
          kubectl apply -f elastic/elastic-persistentvolumeclaim.yaml -n ${{ env.NAMESPACE }}
          kubectl apply -f minio/files-persistentvolumeclaim.yaml -n ${{ env.NAMESPACE }}
          kubectl apply -f mongodb/mongodb-persistentvolumeclaim.yml -n ${{ env.NAMESPACE }}

      # Step 9: Deploy Application Services
      - name: Deploy Application
        run: |
          kubectl apply -f . -n ${{ env.NAMESPACE }}

      # Step 10: Verify Deployment
      - name: Verify Deployment
        run: |
          kubectl get all -n ${{ env.NAMESPACE }}
