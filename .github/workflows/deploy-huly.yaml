name: Deploy Huly to GKE

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      GCP_PROJECT_ID: self-hosted-projects-444508
      GKE_CLUSTER_NAME: huly-cluster
      GCP_ZONE: us-central1
      NAMESPACE: huly

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Google Cloud SDK
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        project_id: ${{ env.GCP_PROJECT_ID }}

    # Step 3: Authenticate with GKE
    - name: Authenticate with GKE
      run: |
        gcloud container clusters get-credentials ${{ env.GKE_CLUSTER_NAME }} \
          --zone ${{ env.GCP_ZONE }}

    # Step 4: Create Namespace (if necessary)
    - name: Create Namespace
      run: |
        kubectl create namespace ${{ env.NAMESPACE }} || true

    # Step 5: Apply Configurations (ConfigMaps and Secrets)
    - name: Apply Configurations
      run: |
        kubectl apply -f config/ -n ${{ env.NAMESPACE }}

    # Step 6: Apply Persistent Volume Claims
    - name: Apply Persistent Volume Claims
      run: |
        kubectl apply -f elastic/elastic-persistentvolumeclaim.yaml -n ${{ env.NAMESPACE }}
        kubectl apply -f minio/files-persistentvolumeclaim.yaml -n ${{ env.NAMESPACE }}
        kubectl apply -f mongodb/mongodb-persistentvolumeclaim.yml -n ${{ env.NAMESPACE }}

    # Step 7: Deploy Application Services
    - name: Deploy Application
      run: |
        kubectl apply -f . -n ${{ env.NAMESPACE }}

    # Step 8: Verify Deployment
    - name: Verify Deployment
      run: |
        kubectl get all -n ${{ env.NAMESPACE }}
